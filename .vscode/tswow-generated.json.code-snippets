{
    "tswow-stdlib--Class::Short": {
        "prefix": "Class::Short",
        "body": [
            "std.Classes.create(\"${1:mod}\",\"${2:id}\",'MAGE')",
            "    .Name.enGB.set('New Class')",
            "",
            "    // Modify stats",
            "    .Stats.Stamina.set((old,race,level)=>old)",
            "",
            "    // Modify starting gear",
            "    .StartGear.Mainhand.set(25)",
            "",
            "    // Races",
            "    .addRaces(['HUMAN','ORC'])",
            "",
            "    .UI.Color.set(0xcc0077)",
            "    .UI.Info.add('- Role: Damage')",
            "    .UI.Info.add('- Some Armor (Whatever)')",
            "    .UI.Info.add('- Uses something as a resource')",
            "    .UI.Description.set(\"Class description text.\")",
            ""
        ],
        "description": "- Short snippet for class creation."
    },
    "tswow-stdlib--Class::Long": {
        "prefix": "Class::Long",
        "body": [
            "export const CLASS = std.Classes.create(\"${1:mod}\",\"${2:id}\",'MAGE')",
            "    .Name.enGB.set('New Class')",
            "",
            "    // Modify stats",
            "    .Stats.Stamina.set((old,race,level)=>old)",
            "",
            "    // Modify starting gear",
            "    .StartGear.Mainhand.set(25)",
            "",
            "    // Races",
            "    .addRaces(['HUMAN','ORC'])",
            "",
            "    .UI.Color.set(0xcc0077)",
            "    .UI.Info.add('- Role: Damage')",
            "    .UI.Info.add('- Some Armor (Whatever)')",
            "    .UI.Info.add('- Uses something as a resource')",
            "    .UI.Description.set(\"Class description text.\")",
            "",
            "export const CLASS_SKILL = std.SkillLines",
            "    .createClass(\"${1:mod}\",\"${2:id}\"+'skill',CLASS.ID)",
            "    .Name.enGB.set('My Class Skill')",
            "",
            "// Autolearn spell",
            "std.Spells.Presets.CreateBolt(\"${1:mod}\",\"${2:id}\"+'spell 1')",
            "    .Name.enGB.set('My Class Spell 2')",
            "    .SkillLines.addAutolearn(CLASS_SKILL.ID).end",
            "",
            "// Learnt spell",
            "const spell = std.Spells.Presets.CreateBolt(\"${1:mod}\",\"${2:id}\"+'spell 2')",
            "    .Name.enGB.set('My Class Spell')",
            "    .SkillLines.add(CLASS_SKILL.ID).end",
            "",
            "const trainer = (id: string)=>",
            "    std.CreatureTemplates.Presets",
            "        .CreateClassTrainer(\"${1:mod}\",'id'+id,CLASS.ID)",
            "        // Add spells here",
            "        .addTrainerSpell(spell.ID,5)",
            "",
            "// Horde trainer",
            "trainer('horde')",
            "    .FactionTemplate.setOrgrimmar()",
            "    .Models.addIds(14413)",
            "    .spawn(\"${1:mod}\",\"${2:id}\"+'horde',",
            "        ${4:Pos(1,1629.273682,-4373.761719,31.497536,3.546033)})",
            "",
            "// Alliance Trainer",
            "trainer('alliance')",
            "    .FactionTemplate.setStormwind()",
            "    .Models.addIds(5074)",
            "    .spawn(\"${1:mod}\",\"${2:id}\"+'alliance',",
            "        ${5:Pos(0,-8827.892578,634.597961,94.258476,3.752199)})",
            ""
        ],
        "description": "- Long snippet for class creation."
    },
    "tswow-stdlib--Creature::Aggressive Mob": {
        "prefix": "Creature::Aggressive Mob",
        "body": [
            "std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Aggressive Mob')",
            "    .FactionTemplate.setNeutralHostile()",
            "    .Models.addIds(29419)",
            "    .MovementType.setRandomMovement()",
            "",
            "    // Stats",
            "    .Stats.ArmorMod.set(1)",
            "    .Stats.DamageMod.set(1)",
            "    .Stats.ExperienceMod.set(1)",
            "    .Stats.HealthMod.set(1)",
            "    .Stats.ManaMod.set(1)",
            "    .UnitClass.setWarrior()",
            "    .Level.set(1,1)",
            "",
            "    // Loot",
            "    .Gold.set(1,100)",
            "    .NormalLoot.addItem(25,10,1,1)",
            "    .NormalLoot.addItem(100,10,1,1)",
            ""
        ],
        "description": "- Basic aggressive mob"
    },
    "tswow-stdlib--Creature::Vendor": {
        "prefix": "Creature::Vendor",
        "body": [
            "std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Vendor NPC')",
            "    .Subname.enGB.set('Vendor')",
            "    .Models.addIds(29419)",
            "    .FactionTemplate.setNeutralPassive()",
            "",
            "    .NPCFlags.Repairer.mark()",
            "    .Vendor.addItem(25)",
            "    // add items here",
            ""
        ],
        "description": "- Basic vendor npc"
    },
    "tswow-stdlib--Creature::Innkeeper": {
        "prefix": "Creature::Innkeeper",
        "body": [
            "std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Innkeeper NPC')",
            "    .Subname.enGB.set('Innkeeper')",
            "    .Models.addIds(29419)",
            "    .FactionTemplate.setNeutralPassive()",
            "    .NPCFlags.Gossip.mark()",
            "    .Gossip",
            "        .Text.add({enGB:'Welcome to my inn!'})",
            "        .Options.add()",
            "            .Text.MaleText.enGB.set('Make this inn your home')",
            "            .Action.setInnkeeper()",
            "            .Icon.setCogwheel()",
            "        .end",
            "",
            "        .Options.add()",
            "            .Text.MaleText.enGB.set('Let me browse your goods')",
            "            .Icon.setVendor()",
            "            .Action.setOwnVendor()",
            "                .addItem(10)",
            "                .addItem(25)",
            "                // add items here",
            "            .end",
            "        .end",
            "    .end",
            ""
        ],
        "description": "- Basic innkeeper and vendor npc"
    },
    "tswow-stdlib--Creature::Multivendor": {
        "prefix": "Creature::Multivendor",
        "body": [
            "std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Multivendor NPC')",
            "    .Subname.enGB.set('Multivendor')",
            "    .Models.addIds(29419)",
            "    .FactionTemplate.setNeutralPassive()",
            "    .NPCFlags.Gossip.mark()",
            "    .Gossip",
            "        .Text.add({enGB:'What goods would you like to browse?'})",
            "",
            "        // Weapon vendor",
            "        .Options.add()",
            "            .Text.MaleText.enGB.set('Let me browse your weapons')",
            "            .Icon.setVendor()",
            "            .Action.setOwnVendor()",
            "                .addItem(25)",
            "                // add items here",
            "            .end",
            "        .end",
            "",
            "        // Food vendor",
            "        .Options.add()",
            "            .Text.MaleText.enGB.set('Let me browse your food')",
            "            .Icon.setVendor()",
            "            .Action.setMultivendor()",
            "                .addItem(117)",
            "                // add items here",
            "            .end",
            "        .end",
            "",
            "        // Bag vendor",
            "        .Options.add()",
            "            .Text.MaleText.enGB.set('Let me browse your bags')",
            "            .Icon.setVendor()",
            "            .Action.setMultivendor()",
            "                .addItem(4496)",
            "                // add items here",
            "            .end",
            "        .end",
            "    .end",
            ""
        ],
        "description": "- Basic multivendor npc"
    },
    "tswow-stdlib--Creature::QuestGiver": {
        "prefix": "Creature::QuestGiver",
        "body": [
            "std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Questgiver NPC')",
            "    .Subname.enGB.set('Questgiver')",
            "    .Models.addIds(29419)",
            "    .FactionTemplate.setNeutralPassive()",
            "    .NPCFlags.QuestGiver.mark()",
            ""
        ],
        "description": "- Basic questgiver npc"
    },
    "tswow-stdlib--Creature::Patrol": {
        "prefix": "Creature::Patrol",
        "body": [
            "std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Patrol NPC')",
            "    .Subname.enGB.set('Patroller')",
            "    .Models.addIds(29419)",
            "    .FactionTemplate.setNeutralPassive()",
            "    .NPCFlags.QuestGiver.mark()",
            "    .spawn(\"${1:mod}\",\"${2:id}\"+'spawn',",
            "        Pos(0,0,0,0,0)",
            "    )",
            "    .PatrolPath.add('WALK',",
            "        [",
            "            ${3:Pos(0,0,0,0,0)}",
            "        ])",
            "    .end",
            ""
        ],
        "description": "- Basic patrol npc"
    },
    "tswow-stdlib--Item::Junk": {
        "prefix": "Item::Junk",
        "body": [
            "std.Items.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Junk Item')",
            "    .DisplayInfo.setID(7048)",
            "    .Class.setJunk()",
            "    .InventoryType.setNonEquippable()",
            ""
        ],
        "description": "- Basic junk item"
    },
    "tswow-stdlib--Item::Weapon": {
        "prefix": "Item::Weapon",
        "body": [
            "std.Items.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Weapon')",
            "    .Description.enGB.set('Weapon Description')",
            "    .DisplayInfo.setID(2380)",
            "    .Quality.setWhite()",
            "    .Class.setSword2H()",
            "    .InventoryType.setTwohand()",
            "",
            "    .Damage.addPhysical(1,10)",
            "    .Delay.set(1000)",
            "    .Stats.addAttackPower(10)",
            ""
        ],
        "description": "- Basic weapon"
    },
    "tswow-stdlib--Item::Armor": {
        "prefix": "Item::Armor",
        "body": [
            "std.Items.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Armor')",
            "    .Description.enGB.set('Armor Description')",
            "    .DisplayInfo.setID(33352)",
            "    .Quality.setWhite()",
            "    .Class.setClothEquip()",
            "    .InventoryType.setShirt()",
            "",
            "    .Armor.set(25)",
            "    .Stats.addAgility(2)",
            ""
        ],
        "description": "- Basic Armor"
    },
    "tswow-stdlib--Item::Quest Item": {
        "prefix": "Item::Quest Item",
        "body": [
            "std.Items.create(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Quest Item')",
            "    .DisplayInfo.setID(6700)",
            "    .Quality.setWhite()",
            "    .Class.setQuest()",
            "    .Bonding.setQuestItem()",
            ""
        ],
        "description": "- Basic Quest Item"
    },
    "tswow-stdlib--Quest::Kill": {
        "prefix": "Quest::Kill",
        "body": [
            "std.Quests.create('my','quest')",
            "    .MinLevel.set(1)",
            "",
            "    .Objectives.Entity.add(3,10)",
            "    .Objectives.Entity.add(6,10)",
            "",
            "    .Rewards.ChoiceItem.add(25,1)",
            "    .Rewards.Money.set(100)",
            "    .Rewards.Difficulty.set1()",
            "",
            "    .Questgiver.addBoth(1)",
            ""
        ],
        "description": "- Basic kill quest with some rewards"
    },
    "tswow-stdlib--Quest::Escort": {
        "prefix": "Quest::Escort",
        "body": [
            "{",
            "    let walker = std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\"+'-walker')",
            "        .Name.enGB.set('Questgiver NPC')",
            "        .Models.addIds(29419)",
            "        .FactionTemplate.setNeutralPassive()",
            "        .NPCFlags.QuestGiver.mark()",
            "        .spawn(\"${1:mod}\",\"${2:id}\"+'-walker-spawn',",
            "            // Spawn location of walker npc",
            "            ${3:Pos(530,10350.250000,-6383.138184,38.526325,1.679071)},",
            "        ).end",
            "",
            "    let finisher = std.CreatureTemplates.create(\"${1:mod}\",\"${2:id}\"+'-finisher')",
            "        .Name.enGB.set('Returner NPC')",
            "        .Models.addIds(29419)",
            "        .FactionTemplate.setNeutralPassive()",
            "        .NPCFlags.QuestGiver.mark()",
            "        .spawn(\"${1:mod}\",\"${2:id}\"+'-finisher-spawn',",
            "            // Spawn location of finisher npc (replace with your own)",
            "            ${4:Pos(530,10340.181641,-6371.824707,35.110600,0.795497),}",
            "        ).end",
            "",
            "    let quest = std.Quests.create(\"${1:mod}\",\"${2:id}\"+'-quest')",
            "        .SortID.set(1)",
            "        .MinLevel.set(1)",
            "        .Questgiver.addStarter(walker.ID)",
            "        .Questgiver.addEnder(finisher.ID)",
            "        .Objectives.Scripted.enGB.set('NPC Escorted')",
            "        .Text.Title.enGB.set('Escort Quest')",
            "        .Text.Description.enGB.set('Quest Description')",
            "        .Text.Objective.enGB.set('Help escort the NPC')",
            "        .Text.Incomplete.enGB.set('Did you escort the NPC yet?')",
            "        .Text.Reward.enGB.set('Good job escorting the NPC')",
            "",
            "    let path = std.ScriptPaths.create()",
            "        .add([",
            "            // Waypoints (replace with your own!)",
            "            ${6:Pos(530,10348.591797,-6373.072266,36.098927,1.677500),}",
            "        ])",
            "",
            "    walker.Scripts.onAcceptedQuest(quest.ID)",
            "        .Action.setQuestWalk(true,path.ID,false,quest.ID,1,\"DEFENSIVE\")",
            "",
            "    walker.Scripts.onDeath()",
            "        .Action.setFailQuestWalk(quest.ID)",
            "",
            "    walker.Scripts.onWaypointReached(path.length,path.ID)",
            "        .Action.setForceDespawn(5000,5)",
            "        .Target.setSelf()",
            "        .then()",
            "        .Action.setFinishQuestWalk(quest.ID)",
            "}",
            ""
        ],
        "description": "- Basic escort quest\n- The waypoint examples are in the Blood Elf starting zone"
    },
    "tswow-stdlib--Spell::Bolt Spell": {
        "prefix": "Spell::Bolt Spell",
        "body": [
            "std.Spells.Presets.CreateBolt(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('My Name')",
            "    .Description.enGB.set('My Description')",
            "    .SchoolMask.Physical.mark()",
            "    .HandEffectPath.set(\"Spells\\\\\\\\Shadow_Precast_Low_Hand.mdx\")",
            "    .ImpactChest.set(\"Spells\\\\\\\\Shadowbolt_Chest_Impact.mdx\")",
            "    .MissilePath.set(\"Spells\\\\\\\\Shadowbolt_Missile.mdx\")",
            "    // Add your effects here",
            "    .Effects.addTemplate()",
            "        .setSchoolDamage()",
            "        .TargetA.setUnitTargetAny()",
            "        .BaseDamage.set(10)",
            "    .end",
            ""
        ],
        "description": "- Basic bolt spell based on Shadowbolt"
    },
    "tswow-stdlib--Spell::Summon Pet": {
        "prefix": "Spell::Summon Pet",
        "body": [
            "std.Spells.Presets.CreateSummon(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Summon Pet')",
            "    .SummonedCreature.set(${3:416})",
            "    .HandEffectPath.set('Spells\\\\\\\\Summon_PreCast_Hand.mdx')",
            "    .BaseEffectPath.set('Spells\\\\\\\\SummonPet_Impact_Base.mdx')",
            "    .CastSound.Filename.set('GrellAggroA.wav')",
            "    .ChannelSound.Filename.set('GrellAggroA.wav')",
            "    .PrecastSound.Filename.set('ShadowPreCastHigh.wav')",
            ""
        ],
        "description": "- Basic warlock-style summoning spell based on Summon Imp"
    },
    "tswow-stdlib--Spell::ChainEffect": {
        "prefix": "Spell::ChainEffect",
        "body": [
            "std.Spells.Presets.CreateChain(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Chain Effect')",
            "    .SchoolMask.Arcane.mark()",
            "",
            "    .PrecastSound.Filename.set(\"LifeDrainLoop.wav\")",
            "    .CastSound.Filename.set(\"LightningBoltImpact.wav\")",
            "    .ImpactSound.Filename.set(\"LightningBoltImpact.wav\")",
            "",
            "    // Edit the visual chain effect here",
            "    .ChainEffect",
            "        .Texture.set(\"Textures\\\\\\\\SpellChainEffects\\\\\\\\Lightning.blp\")",
            "    .end",
            "",
            "    // Add your effects here",
            "    .Effects.addTemplate()",
            "        .setSchoolDamage()",
            "        .BaseDamage.set(10)",
            "        .TargetA.setUnitTargetEnemy()",
            "        .ChainTargets.set(4)",
            "    .end",
            ""
        ],
        "description": "- Basic chain effect based on Chain lightning"
    },
    "tswow-stdlib--Spell::Paladin Aura": {
        "prefix": "Spell::Paladin Aura",
        "body": [
            "std.Spells.Presets.CreatePaladinAura(\"${1:mod}\",\"${2:id}\")",
            "    .Name.enGB.set('Paladin Aura')",
            "    .Description.enGB.set('Paladin-like aura')",
            "",
            "    .CastEffect.set('Spells\\\\\\\\DevotionAura_Base.mdx')",
            "    .ImpactEffect.set('Spells\\\\\\\\DevotionAura_Base.mdx')",
            "    .ImpactSound.Filename.set('DevotionAura.wav')",
            "",
            "    // Add your effects here",
            "    .Effects.addTemplate()",
            "        .setApplyAreaAuraRaid()",
            "        .setModResistance()",
            "        .Resistance.Shadow.mark()",
            "        .BasePoints.set(100)",
            "    .end",
            ""
        ],
        "description": "- Basic paladin-like aura based on Devotion Aura"
    }
}